Two's complement:
  Suppose 8 bits
  how to get -28?
    first convert 28 to binary
      28: 0001 1100
    then invert:
          1110 0011
    then add 1:
          1110 0100
  so -28 is 1110 0100
  
  **Rules: a leading 1 means the number is negative, a leading 0 means the number is 0 or positive.
  
  Example:
    69 - 12 = 69 + (-12):
        12:     0000 0000 0000 0000 0000 0000 0000 1100
        invert: 1111 1111 1111 1111 1111 1111 1111 0011
        add 1:  1111 1111 1111 1111 1111 1111 1111 0100
        69:     0000 0000 0000 0000 0000 0000 0100 0101
        result: 0000 0000 0000 0000 0000 0000 0011 1001

Bit caculation:
  5:
  0000 0000 0000 0000 0000 0000 0000 0101 
  after 5<<2
  0000 0000 0000 0000 0000 0000 0001 0100
  after 5>>2
  0000 0000 0000 0000 0000 0000 0000 0001
  after 5>>3
  0000 0000 0000 0000 0000 0000 0000 0000

  -5:
  1111 1111 1111 1111 1111 1111 1111 1011
  after -5>>3
  1111 1111 1111 1111 1111 1111 1111 1111
  after -5>>>3
  0001 1111 1111 1111 1111 1111 1111 1111

  &:
    5 & 3 = 1
    
    5: 0000 0000 0000 0000 0000 0000 0000 0101 
    3: 0000 0000 0000 0000 0000 0000 0000 0011
    ------------------------------------------
    1: 0000 0000 0000 0000 0000 0000 0000 0001

    1 & 1 = 1, 1 & 0 = 0, 0 & 0 = 0

  |:
    5 | 3 = 7
    
    5: 0000 0000 0000 0000 0000 0000 0000 0101 
    3: 0000 0000 0000 0000 0000 0000 0000 0011
    ------------------------------------------
    7: 0000 0000 0000 0000 0000 0000 0000 0111

    1 | 1 = 1, 1 | 0 = 1, 0 | 0 = 0

  ^:
    5 ^ 3 = 6
    
    5: 0000 0000 0000 0000 0000 0000 0000 0101 
    3: 0000 0000 0000 0000 0000 0000 0000 0011
    ------------------------------------------
    6: 0000 0000 0000 0000 0000 0000 0000 0110

    1 ^ 1 = 0, 1 ^ 0 = 1, 0 ^ 1 = 1, 0 ^ 0 = 0

  ~:
    ~5 = 6
    
    5:  0000 0000 0000 0000 0000 0000 0000 0101
    ------------------------------------------
    -6: 1111 1111 1111 1111 1111 1111 1111 1010
    
    1 -> 0, 0 -> 1

